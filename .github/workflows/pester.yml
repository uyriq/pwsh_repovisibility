name: Pester

on:
  push:
    branches: [main]

jobs:
  test-pwsh:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: Run Pester tests (pwsh)
        run: |
          Write-Host "PowerShell Version: $($PSVersionTable.PSVersion.Major).$($PSVersionTable.PSVersion.Minor)"
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module -Name Pester -Confirm:$false -Force -SkipPublisherCheck -MinimumVersion 5.4.1
          Invoke-Pester -Path "tests" -Passthru
        shell: pwsh

  test-posh:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Pester tests (PowerShell)
        run: |
          Write-Host "PowerShell Version: $($PSVersionTable.PSVersion.Major).$($PSVersionTable.PSRemotingProtocolVersion.Minor)"
          [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module -Name Pester -Confirm:$false -Force -SkipPublisherCheck -MinimumVersion 5.4.1
          Invoke-Pester -Path "tests" -Passthru
          if ($Error[0].FullyQualifiedErrorId -eq 'PesterAssertionFailed') {exit 1}
        shell: powershell
